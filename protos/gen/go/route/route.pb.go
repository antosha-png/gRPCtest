// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0--rc1
// source: route/route.proto

package route1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NoiseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value1        float32                `protobuf:"fixed32,1,opt,name=value1,proto3" json:"value1,omitempty"`
	Value2        float32                `protobuf:"fixed32,2,opt,name=value2,proto3" json:"value2,omitempty"`
	CsvContent    []byte                 `protobuf:"bytes,3,opt,name=csv_content,json=csvContent,proto3" json:"csv_content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoiseRequest) Reset() {
	*x = NoiseRequest{}
	mi := &file_route_route_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoiseRequest) ProtoMessage() {}

func (x *NoiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_route_route_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoiseRequest.ProtoReflect.Descriptor instead.
func (*NoiseRequest) Descriptor() ([]byte, []int) {
	return file_route_route_proto_rawDescGZIP(), []int{0}
}

func (x *NoiseRequest) GetValue1() float32 {
	if x != nil {
		return x.Value1
	}
	return 0
}

func (x *NoiseRequest) GetValue2() float32 {
	if x != nil {
		return x.Value2
	}
	return 0
}

func (x *NoiseRequest) GetCsvContent() []byte {
	if x != nil {
		return x.CsvContent
	}
	return nil
}

type NoiseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoiseResponse) Reset() {
	*x = NoiseResponse{}
	mi := &file_route_route_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoiseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoiseResponse) ProtoMessage() {}

func (x *NoiseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_route_route_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoiseResponse.ProtoReflect.Descriptor instead.
func (*NoiseResponse) Descriptor() ([]byte, []int) {
	return file_route_route_proto_rawDescGZIP(), []int{1}
}

func (x *NoiseResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

var File_route_route_proto protoreflect.FileDescriptor

const file_route_route_proto_rawDesc = "" +
	"\n" +
	"\x11route/route.proto\x12\x05route\"_\n" +
	"\fNoiseRequest\x12\x16\n" +
	"\x06value1\x18\x01 \x01(\x02R\x06value1\x12\x16\n" +
	"\x06value2\x18\x02 \x01(\x02R\x06value2\x12\x1f\n" +
	"\vcsv_content\x18\x03 \x01(\fR\n" +
	"csvContent\"'\n" +
	"\rNoiseResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status2D\n" +
	"\tNoiseData\x127\n" +
	"\n" +
	"UploadData\x12\x13.route.NoiseRequest\x1a\x14.route.NoiseResponseB\x15Z\x13nva.route.v1;route1b\x06proto3"

var (
	file_route_route_proto_rawDescOnce sync.Once
	file_route_route_proto_rawDescData []byte
)

func file_route_route_proto_rawDescGZIP() []byte {
	file_route_route_proto_rawDescOnce.Do(func() {
		file_route_route_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_route_route_proto_rawDesc), len(file_route_route_proto_rawDesc)))
	})
	return file_route_route_proto_rawDescData
}

var file_route_route_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_route_route_proto_goTypes = []any{
	(*NoiseRequest)(nil),  // 0: route.NoiseRequest
	(*NoiseResponse)(nil), // 1: route.NoiseResponse
}
var file_route_route_proto_depIdxs = []int32{
	0, // 0: route.NoiseData.UploadData:input_type -> route.NoiseRequest
	1, // 1: route.NoiseData.UploadData:output_type -> route.NoiseResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_route_route_proto_init() }
func file_route_route_proto_init() {
	if File_route_route_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_route_route_proto_rawDesc), len(file_route_route_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_route_route_proto_goTypes,
		DependencyIndexes: file_route_route_proto_depIdxs,
		MessageInfos:      file_route_route_proto_msgTypes,
	}.Build()
	File_route_route_proto = out.File
	file_route_route_proto_goTypes = nil
	file_route_route_proto_depIdxs = nil
}
